{{- /*
  vim:ft=toml.gotmpl:
*/ -}}
{{- /* CHEZMOI CONFIGURATION */ -}}

{{- /* COMPUTED VARS */ -}}
{{- $machineType := .chezmoi.os -}}
{{- $osName := .chezmoi.osRelease.id -}}
{{- $isWsl := and .chezmoi.kernel.osrelease (.chezmoi.kernel.osrelease | lower | contains "microsoft") -}}
{{- $isArch := eq .chezmoi.osRelease.id "arch" -}}
{{- $isUbuntu := eq .chezmoi.osRelease.id "ubuntu" -}}

{{- /* PROMPTS */ -}}
{{- writeToStdout "🌟 Chezmoi configuration 🌟\n" -}}
{{- writeToStdout "💡 Tip: You can re-enter prompted inputs with `chezmoi init --data=false`.💡\n" -}}
{{- $bitwardenEmail := promptStringOnce . "bitwarden.email" "🔧❓Which Bitwarden email" -}}
{{- $personalConfig := promptBoolOnce . "isPersonal" "🔧❓Enable personal configuration [Y/n]" true -}}
{{- $workConfig := promptBoolOnce . "isWork" "🔧❓Enable work configuration [y/N]" false -}}

{{- /* TEMPLATE */ -}}
[hooks.read-source-state.pre]
    command = "{{ .chezmoi.workingTree }}/home/.chezmoihooks/install-prerequisite.sh"

[merge]
  command = "nvim"
  args = ["-d", "{{ "{{ .Source }}" }}", "{{ "{{ .Destination }}" }}", "{{ "{{ .Target }}" }}"]

[github]
  refreshPeriod = "168h"

[diff]
  pager = "delta"
  command = "delta"
  args = "--side-by-side"
  exclude = ["scripts", "dirs"]

[data]
  isPersonal = {{ $personalConfig }}
  isWork = {{ $workConfig }}
  isArch = {{ $isArch }}
  isUbuntu = {{ $isUbuntu }}
  isWsl = {{ $isWsl }}
  machineType = {{ .chezmoi.os | quote }}
  osName = {{ .chezmoi.osRelease.id | quote }}

[data.bitwarden]
  email = {{ $bitwardenEmail | quote }}

{{ if $personalConfig -}}
[data.personal]
  email = {{ promptStringOnce . "personal.email" "📧❓Gitconfig: Personal email" | quote }}
  username = {{ promptStringOnce . "personal.username" "🧑❓Gitconfig: Personal username" | quote }}
{{- end }}

{{ if $workConfig -}}
[data.work]
  generateWorkSshKey = {{ promptBool "🔧❓Generate new sshKey [Y/n]" true -}}
  email = {{ promptStringOnce . "work.email" "📧❓Gitconfig: Work email" | quote }}
  username = {{ promptStringOnce . "work.username" "🧑❓Gitconfig: Work username" | quote }}
  # gpgKey = {{ promptBool "🔐❓Gitconfig: Work gpgKey [y/N]" false}}
{{- end }}

{{ if $isWsl -}}
[data.wsl]
  isWindowsAdmin = {{ promptBool "🔧❓Are you Windows admin [y/N]" false -}}
{{- end }}

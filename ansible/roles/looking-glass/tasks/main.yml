# vim:ft=yaml.ansible:
- name: Install required packages for building (Ubuntu)
  package:
    name:
      - git
      - cmake
      - make
      - gcc
      - g++
      - build-essential
    state: present
  when: ansible_os_family == "Debian"

- name: Install required packages for building (Arch) --asdeps
  shell: pacman -S --needed --noconfirm --asdeps git cmake make gcc
  become: yes
  when: ansible_os_family == "Archlinux"

- name: Install linux-headers and dkms with --nodeps (Ubuntu)
  shell: apt-get install -y --force-depends linux-headers-{{ ansible_kernel }} dkms
  become: yes
  when: ansible_os_family == "Debian"
  ignore_errors: yes

- name: Install linux-headers and dkms with --nodeps (Arch)
  shell: pacman -S --nodeps --noconfirm linux-headers dkms
  become: yes
  when: ansible_os_family == "Archlinux"
  ignore_errors: yes

- name: Clone LookingGlass repository recursively
  git:
    repo: "{{ lg_repo_url }}"
    dest: "/tmp/LookingGlass"
    recursive: yes
    force: yes
    version: "{{ lg_version | default('HEAD') }}"
  register: git_clone

- name: Create client build directory
  file:
    path: "/tmp/LookingGlass/client/build"
    state: directory
    mode: "0755"

- name: Run cmake for client
  shell: cmake ../
  args:
    chdir: "/tmp/LookingGlass/client/build"
  register: cmake_result

- name: Build client with make
  shell: "make {{ lg_make_options }} ../"
  args:
    chdir: "/tmp/LookingGlass/client/build"
  register: make_result

- name: Install client with make install
  shell: make install
  args:
    chdir: "/tmp/LookingGlass/client/build"
  become: yes
  register: make_install_result

- name: Install DKMS module
  shell: dkms install "."
  args:
    chdir: "/tmp/LookingGlass/modules"
  become: yes
  register: dkms_install
  failed_when: dkms_install.rc != 0 and 'already installed' not in dkms_install.stderr

- name: Display build results
  debug:
    msg: |
      CMake result: {{ cmake_result.rc }}
      Make result: {{ make_result.rc }}
      Make install result: {{ make_install_result.rc }}
      DKMS install result: {{ dkms_install.rc }}
